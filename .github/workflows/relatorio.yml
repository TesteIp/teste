name: Relat칩rio de Commits

on:
  pull_request:
    types: [closed]

jobs:
  commit_report:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Fetch all commits
        run: git fetch --prune --unshallow

      - name: Gerar conte칰do do relat칩rio de commits
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_HEAD_BRANCH: ${{ github.event.pull_request.head.ref }}  # Branch de origem da PR
          PR_BASE_BRANCH: ${{ github.event.pull_request.base.ref }}  # Branch de destino da PR
        run: |
          REPORT_CONTENT="Relat칩rio de Commits da PR #${PR_NUMBER}\n"
          REPORT_CONTENT+="Esta PR foi feita da branch '${PR_HEAD_BRANCH}' para a branch '${PR_BASE_BRANCH}'.\n"
          REPORT_CONTENT+="Este relat칩rio cont칠m todos os commits associados ao PR #${PR_NUMBER}.\n"
          REPORT_CONTENT+="------------------------------------------------------------\n"
          REPORT_CONTENT+="Commits neste PR:\n"
          
          # Loop para adicionar os commits e arquivos modificados
          COMMITS=$(git log $BASE_SHA..$HEAD_SHA --oneline --pretty=format:"%h")
          for COMMIT in $COMMITS
          do
            # Adiciona a descri칞칚o do commit
            COMMIT_DESC=$(git log --oneline -n 1 $COMMIT)
            REPORT_CONTENT+="Commit: ${COMMIT_DESC}\n"

            # Lista os arquivos modificados nesse commit
            FILES=$(git diff-tree --no-commit-id --name-only -r $COMMIT)
            if [ -n "$FILES" ]; then
              REPORT_CONTENT+="Arquivos modificados:\n"
              for FILE in $FILES
              do
                REPORT_CONTENT+="- ${FILE}\n"
              done
            else
              REPORT_CONTENT+="Nenhuma modifica칞칚o no arquivo para este commit.\n"
            fi

            # Detalhes do autor e data do commit
            AUTHOR=$(git log -1 --pretty=format:"%an" $COMMIT)
            DATE=$(git log -1 --pretty=format:"%ad" $COMMIT)
            REPORT_CONTENT+="Alterado por: ${AUTHOR}\n"
            REPORT_CONTENT+="Data: ${DATE}\n"

            REPORT_CONTENT+="------------------------------------------------------------\n"
          done

          echo "$REPORT_CONTENT" > report_content.txt

      - name: Criar p치gina no Confluence
        env:
          CONFLUENCE_USER: ${{ secrets.email }}  # Token de usu치rio
          CONFLUENCE_API_TOKEN: ${{ secrets.testecon }}  # Token da API
        run: |
          PAGE_TITLE="Relat칩rio de Commits da PR #${{ github.event.pull_request.number }}"
          CONFLUENCE_URL="https://joaovictorcaoki.atlassian.net/wiki/rest/api/content"
          SPACE_KEY="DDS"  # O espa칞o Confluence que voc칡 deseja usar
          PARENT_PAGE_ID="65784"  # ID da p치gina pai (pasta)
          
          # Ler o conte칰do do relat칩rio gerado
          REPORT_CONTENT=$(cat report_content.txt)

          # Criar uma nova p치gina no Confluence para o PR na pasta espec칤fica
          response=$(curl -u "${CONFLUENCE_USER}:${CONFLUENCE_API_TOKEN}" \
            -X POST \
            -H "Content-Type: application/json" \
            --data '{
              "type": "page",
              "title": "'"$PAGE_TITLE"'",
              "space": {
                "key": "'"$SPACE_KEY"'"
              },
              "ancestors": [
                {
                  "id": "'"$PARENT_PAGE_ID"'"
                }
              ],
              "body": {
                "storage": {
                  "value": "'"${REPORT_CONTENT}"' ",
                  "representation": "storage"
                }
              }
            }' "https://joaovictorcaoki.atlassian.net/wiki/rest/api/content")

          # Extrair o link da p치gina criada no Confluence
          PAGE_URL="https://joaovictorcaoki.atlassian.net/wiki/spaces/DDS/folder/65784"

          # Armazenar o link da p치gina do Confluence para uso posterior
          echo "::set-output name=page_url::$PAGE_URL"  # Definir o link da p치gina como output

      - name: Comentar na PR com o link da pasta do Confluence
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const prNumber = ${{ github.event.pull_request.number }};
            const pageUrl = "${{ steps.create_confluence_page.outputs.page_url }}"; // Link para a pasta do Confluence
            const commentBody = `
              ### 游닇 Relat칩rio de Commits

              Voc칡 pode acessar o relat칩rio de commits detalhado na pasta do Confluence [aqui](${pageUrl}).
            `;
            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: prNumber,
              body: commentBody,
            });
