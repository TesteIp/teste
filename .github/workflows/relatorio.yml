name: Relatório de Commits

on:
  pull_request:
    types: [closed]

jobs:
  commit_report:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Fetch all commits
        run: git fetch --prune --unshallow

      - name: Gerar conteúdo do relatório de commits
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          REPORT_CONTENT="Relatório de Commits da PR #${PR_NUMBER}\n"
          REPORT_CONTENT+="Este relatório contém todos os commits associados ao PR #${PR_NUMBER}.\n"
          REPORT_CONTENT+="------------------------------------------------------------\n"
          REPORT_CONTENT+="Commits neste PR:\n"
          
          # Loop para adicionar os commits e arquivos modificados
          COMMITS=$(git log $BASE_SHA..$HEAD_SHA --oneline --pretty=format:"%h")
          for COMMIT in $COMMITS
          do
            # Adiciona a descrição do commit
            COMMIT_DESC=$(git log --oneline -n 1 $COMMIT)
            REPORT_CONTENT+="Commit: ${COMMIT_DESC}\n"

            # Lista os arquivos modificados nesse commit
            FILES=$(git diff-tree --no-commit-id --name-only -r $COMMIT)
            for FILE in $FILES
            do
              REPORT_CONTENT+="- ${FILE}\n"
            done

            # Detalhes do autor e data do commit
            AUTHOR=$(git log -1 --pretty=format:"%an" $COMMIT)
            DATE=$(git log -1 --pretty=format:"%ad" $COMMIT)
            REPORT_CONTENT+="Alterado por: ${AUTHOR}\n"
            REPORT_CONTENT+="Data: ${DATE}\n"

            REPORT_CONTENT+="------------------------------------------------------------\n"
          done

          echo "$REPORT_CONTENT" > report_content.txt

      - name: Criar página no Confluence
        env:
          CONFLUENCE_USER: ${{ secrets.email }}  # Token de usuário
          CONFLUENCE_API_TOKEN: ${{ secrets.testecon }}  # Token da API
        run: |
          PAGE_TITLE="Relatório de Commits da PR #${{ github.event.pull_request.number }}"
          CONFLUENCE_URL="https://joaovictorcaoki.atlassian.net/wiki/rest/api/content"
          SPACE_KEY="DDS"  # O espaço Confluence que você deseja usar
          
          # Ler o conteúdo do relatório gerado
          REPORT_CONTENT=$(cat report_content.txt)

          # Criar uma nova página no Confluence para o PR
          curl -u "${CONFLUENCE_USER}:${CONFLUENCE_API_TOKEN}" \
            -X POST \
            -H "Content-Type: application/json" \
            --data '{
              "type": "page",
              "title": "'"$PAGE_TITLE"'",
              "space": {
                "key": "'"$SPACE_KEY"'"
              },
              "body": {
                "storage": {
                  "value": "'"${REPORT_CONTENT}"'",
                  "representation": "storage"
                }
              }
            }' "https://joaovictorcaoki.atlassian.net/wiki/rest/api/content"
