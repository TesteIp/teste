name: Relatório de Commits

on:
  pull_request:
    types: [closed]

jobs:
  commit_report:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Fetch all commits
        run: git fetch --prune --unshallow

      - name: Gerar conteúdo do relatório de commits
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.sha }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO_NAME: ${{ github.repository }}
        run: |
          REPORT_CONTENT="## Relatório de Commits da PR #${PR_NUMBER} no repositório '${REPO_NAME}'\n\n"
          REPORT_CONTENT+="**Branch de origem:** \`${{ github.event.pull_request.head.ref }}\`\n"
          REPORT_CONTENT+="**Branch de destino:** \`${{ github.event.pull_request.base.ref }}\`\n"
          REPORT_CONTENT+="------------------------------------------------------------\n\n"

          # Loop para adicionar os commits e arquivos modificados
          COMMITS=$(git log $BASE_SHA..$HEAD_SHA --pretty=format:"%H")
          for COMMIT in $COMMITS
          do
            COMMIT_DESC=$(git log -1 --pretty=format:"%h - %s" $COMMIT)
            AUTHOR=$(git log -1 --pretty=format:"%an" $COMMIT)
            DATE=$(git log -1 --pretty=format:"%d/%m/%Y %H:%M:%S" $COMMIT)

            REPORT_CONTENT+="### Commit: ${COMMIT_DESC}\n"
            REPORT_CONTENT+="**Autor:** ${AUTHOR}\n"
            REPORT_CONTENT+="**Data:** ${DATE}\n"
            REPORT_CONTENT+="\n**Arquivos modificados e suas alterações:**\n"

            FILES=$(git diff-tree --no-commit-id --name-only -r $COMMIT)
            for FILE in $FILES
            do
              REPORT_CONTENT+="\n#### Arquivo: ${FILE}\n"
              DIFF=$(git diff $COMMIT^ $COMMIT -- $FILE | sed 's/"/\\"/g')  # Pegando o diff do arquivo
              REPORT_CONTENT+="\n\`\`\`diff\n${DIFF}\n\`\`\`\n"
            done

            REPORT_CONTENT+="\n------------------------------------------------------------\n"
          done

          echo -e "$REPORT_CONTENT" > report_content.txt

      - name: Criar página no Confluence
        env:
          CONFLUENCE_USER: ${{ secrets.email }}  
          CONFLUENCE_API_TOKEN: ${{ secrets.testecon }}  
        run: |
          PAGE_TITLE="Relatório de Commits da PR #${{ github.event.pull_request.number }} no repositório '${{ github.repository }}'"
          CONFLUENCE_URL="https://joaovictorcaoki.atlassian.net/wiki/rest/api/content"
          SPACE_KEY="DDS"  
          PARENT_PAGE_ID="65784"  

          # Ler o conteúdo do relatório gerado
          REPORT_CONTENT=$(cat report_content.txt)

          # Criar uma nova página no Confluence para o PR
          curl -u "${CONFLUENCE_USER}:${CONFLUENCE_API_TOKEN}" \
            -X POST \
            -H "Content-Type: application/json" \
            --data '{
              "type": "page",
              "title": "'"$PAGE_TITLE"'",
              "space": {
                "key": "'"$SPACE_KEY"'"
              },
              "ancestors": [
                {
                  "id": "'"$PARENT_PAGE_ID"'"
                }
              ],
              "body": {
                "storage": {
                  "value": "'"${REPORT_CONTENT}"'",
                  "representation": "wiki"
                }
              }
            }' "$CONFLUENCE_URL"
